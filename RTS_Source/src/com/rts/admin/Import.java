package com.rts.admin;

import com.rts.admin.*;
import com.rts.dao.daofactory.MySQLDAOFactory;
import com.rts.dao.interfaces.AssetsDao;
import com.rts.dao.interfaces.BusinessUnitDAO;
import com.rts.dao.interfaces.ContractReqDAO;
import com.rts.dao.interfaces.ProjectsDAO;
import com.rts.pojoclasses.Assets;
import com.rts.pojoclasses.BusinessUnitPojo;
import com.rts.pojoclasses.ContractReq;
import com.rts.pojoclasses.Projects;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UpdateProject.java
 *
 * Created on Aug 31, 2012, 5:45:32 PM
 */

/**
 *
 * @author bhandrah
 */
public class Import extends javax.swing.JFrame {
    BusinessUnitDAO budao = MySQLDAOFactory.getDAOFactory().getBUDAO();
    ProjectsDAO projectsDAO =MySQLDAOFactory.getDAOFactory().getProjectsDAO();
    Projects projectToPass, projects;
    List<Projects> projectsList;

    /** Creates new form UpdateProject */
    public Import() {
        initComponents();
        projects= new Projects();
        projectToPass = new Projects();
        Object[] bu=budao.getBUFromDb();
        DefaultComboBoxModel model=new DefaultComboBoxModel(bu);
        jComboBox1.setModel(model);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Select BU : ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Project Name : ");
        jLabel2.setEnabled(false);

        jButton1.setText("Import");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.setEnabled(false);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, 175, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, 175, Short.MAX_VALUE))
                        .addContainerGap(282, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(jButton1)
                .addContainerGap(298, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
              // TODO add your handling code here:
        String str = (String)jComboBox1.getSelectedItem();
        int buid = budao.getBuForProjectFromDb(str);
        BusinessUnitPojo bup = new BusinessUnitPojo();
        bup.setBuId(buid);
        bup.setBuName(str);
        projectToPass.setBusinessUnit(bup);
        System.out.println("BU is : "+str);
      //  populateProjects(str);
         projectsList = projectsDAO.getProjectFromDb(str);
         Object [] projectArray=new Object[projectsList.size()];
         for (int i=0;i<projectsList.size();i++)
         {
             projects = (Projects) projectsList.get(i);
             projectArray[i] = projects.getProjectName();

         }
       // Object [] projectArray=projectsList.toArray();
        DefaultComboBoxModel model=new DefaultComboBoxModel(projectArray);
        jComboBox2.setModel(model);

        jLabel2.setEnabled(true);
     

       
       jComboBox2.setEnabled(true);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
     // TODO add your handling code here:

        
       // jTextField2.setText("");
        jButton1.setEnabled(true);
        

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      
           if(JOptionPane.showConfirmDialog(this, "Do you want to confirm the Import of Risk Assessment for this Project?", "Import", JOptionPane.YES_NO_OPTION) == 0)
            {
               JFileChooser chooser = new JFileChooser();
            int returnVal = chooser.showOpenDialog(null);

            Assets assets = new Assets();
            List<Assets> listconReqs = new ArrayList<Assets>();
            ContractReqDAO contractReqDAO =  MySQLDAOFactory.getDAOFactory().getContractReqDAO();
            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                File f = chooser.getSelectedFile();
               // String filename = "C:\\bugs reported.xls";


                try {
                        FileInputStream myInput = new FileInputStream(f);

                        POIFSFileSystem myFileSystem = new POIFSFileSystem(myInput);

                        HSSFWorkbook myWorkBook = new HSSFWorkbook(myFileSystem);
                        AssetsDao assetsDao =  MySQLDAOFactory.getDAOFactory().getAssetsDao();

                        HSSFSheet mySheet = myWorkBook.getSheetAt(0);
                        HSSFCell hSSFCell;
                        int i=0;

                        Iterator rowIter = mySheet.rowIterator();


                        assets.setProjectId(projects);
                        while (rowIter.hasNext())
                        {
                            HSSFRow myRow=null;
                            System.out.println("Row called");
                            if(i==0)
                            {
                                 myRow = (HSSFRow) rowIter.next();
                                i=1;
                            }
                             else         // Iterator cellIter = myRow.cellIterator();
                            {
                                 myRow = (HSSFRow) rowIter.next();
                                 

                                hSSFCell = myRow.getCell(0);
                                assets.setAssetsName(hSSFCell.toString());

                                hSSFCell = myRow.getCell(1);
                                assets.setAssetType(hSSFCell.toString());

                                hSSFCell = myRow.getCell(2);
                                assets.setAssetsDescription(hSSFCell.toString());

                                hSSFCell = myRow.getCell(3);
                                assets.setAssetsOwner(hSSFCell.toString());

                                hSSFCell = myRow.getCell(4);
                                assets.setAssetsIntegrity(Integer.parseInt(hSSFCell.toString()));

                                hSSFCell = myRow.getCell(5);
                                assets.setAssetsConfidentiality(Integer.parseInt(hSSFCell.toString()));

                                hSSFCell = myRow.getCell(6);
                                assets.setAssetsAvailability(Integer.parseInt(hSSFCell.toString()));
                              

                                hSSFCell = myRow.getCell(7);
                                assets.setAssetsValue(Integer.parseInt(hSSFCell.toString()));


                                assetsDao.insetAssetsToDb(assets);
                                
                             //   listconReqs.add(contractReq);
                                System.out.println("in the frame "+assets.toString());
                                
                          }
                        }

           

                } catch (Exception e) {
                        e.printStackTrace();
                }
                }


            }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Import().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
